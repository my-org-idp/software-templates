apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: deployment-template
  title: Generate Deployment Repository
  description: Create a simple deployment application
  tags:
    - deployment
    - gitops
spec:
  owner: my-org-idp
  type: service

  parameters:
    - title: Conditionally set password
      required:
        - passwordEnabled
      properties:
        passwordEnabled:
          title: Is password enabled?
          type: boolean
          default: false
          ui:widget: radio
      dependencies:
        passwordEnabled:
          'oneOf':
            - properties:
                passwordEnabled:
                  boolean:
                    - false
            - properties:
                passwordEnabled:
                  boolean:
                    - true
                password:
                  type: string
                  title: Password
                  ui:widget: password
              required:
                - password
    - title: Define Parameters For argo.yaml
      required:
        - appname
      properties:
        appname:
          title: Application Name
          type: string
          ui:autofocus: true
        repochart:
          title: Repo Chart Name
          type: string
        chartapp:
          title: Chart Name Application
          type: string
        revisionchart:
          title: Chart Version Application
          type: string
        namespaces:
          title: Namespaces Application
          type: string
          default: 'default'
        projectname:
          title: Project Name Application
          type: string
          enum:
            - rise-apps
            - rise-infra
        env:
          title: Environment Application
          type: string
          enum:
            - dev
            - sandbox
            - production
    - title: Define Resources for values.yaml
      properties:
        resources_requests_cpu:
          title: Define resources requests CPU Application
          type: string
        resources_requests_memory:
          title: Define resources requests Memory Application
          type: string
        resources_limit_cpu:
          title: Define resources limit CPU Application
          type: string
        resources_limit_memory:
          title: Define resources limit Memory Application
          type: string
    - title: Define HPA for values.yaml
      properties:
        HPAenabled:
          title: Enabled HPA
          type: boolean
          default: false
          ui:widget: radio
        HPAminReplicas:
          title: minimum Replicas
          type: number
          default: 2
        HPAmaxReplicas:
          title: maximum Replicas
          type: number
          default: 4
        HPAtargetCPUUtilizationPercentage:
          title: target CPU Utilization Percentage
          type: number
          default: 80
        HPAmetrics:
          title: Metrics HPA
          type: array
          items:
            type: string
          uniqueItems: true

          
        
          
    - title: Application repository Information
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        dryRun:
          title: Only perform a dry run, don't publish anything
          type: boolean
          default: true

        owner:
          title: Owner
          type: string
          description: IdP owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

  steps:
    - id: template
      name: Generating component
      action: fetch:template
      input:
        url: ./skeleton
        values:
          appname: ${{ parameters.appname }}
          repochart: ${{ parameters.repochart }}
          chartapp: ${{ parameters.chartapp }}
          revisionchart: ${{ parameters.revisionchart }}
          namespaces: ${{ parameters.namespaces }}
          projectname: ${{ parameters.projectname }}
          env: ${{ parameters.env }}
          HPAenabled: ${{parameters.HPAenabled}}
          HPAminReplicas: ${{parameters.HPAminReplicas}}
          HPAmaxReplicas: ${{parameters.HPAmaxReplicas}}
          HPAtargetCPUUtilizationPercentage: ${{parameters.HPAtargetCPUUtilizationPercentage}}
          HPAmetrics: ${{parameters.HPAmetrics}}
          resources_requests_cpu: ${{parameters.resources_requests_cpu}}
          resources_requests_memory: ${{parameters.resources_requests_memory}}
          resources_limit_cpu: ${{parameters.resources_limit_cpu}}
          resources_limit_memory: ${{parameters.resources_limit_memory}}

         
    - id: publish_production
      if: ${{ parameters.dryRun !== true and parameters.env === "production" }}
      name: Publishing to Source Code Repository Production
      action: publish:github
      input:
        description: This is ${{ parameters.appname }}
        repoUrl: ${{ parameters.repoUrl }}
        branch: master
        repoVisibility: private

    # - id: publish_non_production
    #   if: ${{ parameters.dryRun !== true and parameters.env !== "production" }}
    #   name: Publishing to Source Code Repository Non Production
    #   action: publish:github
    #   input:
    #     description: This is ${{ parameters.appname }}
    #     repoUrl: ${{ parameters.repoUrl }}
    #     branch: ${{ parameters.env }}
    #     repoVisibility: private

    - id: register_production
      if: ${{ parameters.dryRun !== true and parameters.env === "production" }}
      name: Registering to the Catalog Production
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish_production.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

    # - id: register_non_production
    #   if: ${{ parameters.dryRun !== true and parameters.env !== "production" }}
    #   name: Registering to the Catalog Non Production 
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish_non_production.output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'

    - name: Results
      if: ${{ parameters.dryRun }}
      action: debug:log
      input:
        listWorkspace: true

  output:
    links:
      - title: Source Code Repository Production
        url: ${{ steps.publish_production.output.remoteUrl }}
      - title: Open Component in catalog Production
        icon: catalog
        entityRef: ${{ steps.register_production.output.entityRef }}
      # - title: Source Code Repository Non Production
      #   url: ${{ steps.publish_non_production.output.remoteUrl }}
      # - title: Open Component in catalog Non Production
      #   icon: catalog
      #   entityRef: ${{ steps.register_non_production.output.entityRef }}