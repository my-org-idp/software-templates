apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: deployment-template
  title: Generate Deployment Repository
  description: Create a simple deployment application
  tags:
    - deployment
    - gitops
spec:
  owner: my-org-idp
  type: service

  parameters:
    - title: Define Parameters For argo.yaml
      required:
        - appname
      properties:
        appname:
          title: Application Name
          type: string
          ui:autofocus: true
        repochart:
          title: Repo Chart Name
          type: string
        chartapp:
          title: Chart Name Application
          type: string
        revisionchart:
          title: Chart Version Application
          type: string
        namespaces:
          title: Namespaces Application
          type: string
          default: 'default'
        projectname:
          title: Project Name Application
          type: string
          enum:
            - rise-apps
            - rise-infra
        env:
          title: Environment Application
          type: string
          enum:
            - dev
            - sandbox
            - production
    - title: Define Resources for values.yaml
      properties:
        resources_requests_cpu:
          title: Define resources requests CPU Application
          type: number
          default: 250
        resources_requests_memory:
          title: Define resources requests Memory Application
          type: number
          default: 256
        resources_limit_cpu:
          title: Define resources limit CPU Application
          type: number
          default: 500
        resources_limit_memory:
          title: Define resources limit Memory Application
          type: number
          default: 1024
    - title: Define Environment Variable Application 
      properties:
        Environment:
          type: array
          items:
            type: object
            properties:
              Key:
                type: string
                title: Key
              Value:
                type: string
                title: Value
    - title: Define Application Properties Consul
      properties:
        ApplicationProperties:
          type: array
          items:
            type: object
            properties:
              Key:
                type: string
                title: Key
              Value:
                type: string
                title: Value
    - title: Define Ingress Application
      required:
        - IngressTLSEnabled
        - IngressEnabled
      properties:
        IngressEnabled:
          title: Enabled Inggress
          default: 'false'
          type: string
          ui:autofocus: true
          enum:
            - 'true'
            - 'false'
        
      dependencies:
        IngressEnabled:
          'oneOf':
            - properties:
                IngressEnabled:
                  enum:
                    - 'false'
            - properties:
                IngressEnabled:
                  enum:
                    - 'true'
                IngressHost:
                  title: Input Host
                  type: array
                  items:
                    type: string
                IngressClassName:
                  title: Input Ingress Class Name
                  type: string
                  default: 'internal'
                  enum:
                    - 'external'
                    - 'internal'
                IngressAnnotations:
                  type: array
                  title: Input Ingress Annotations
                  items:
                    type: object
                    properties:
                      Key:
                        type: string
                        title: Key
                      Value:
                        type: string
                        title: Value
                IngressPath:
                  type: string
                  title: Input Path Ingress
                  default: '/'
                IngressTLSEnabled:
                  title: Enabled TLS Inggress
                  default: 'false'
                  type: string
                  ui:autofocus: true
                  enum:
                    - 'true'
                    - 'false'
              dependencies:
                IngressTLSEnabled:
                  'oneOf':
                    - properties:
                        IngressTLSEnabled:
                          enum:
                            - 'false'
                    - properties:
                        IngressTLSEnabled:
                          enum:
                            - 'true'
                        IngressTLS:
                          type: array
                          items:
                            type: object
                            properties:
                              IngressSecretName:
                                title: Input Secret Name for tls
                                type: string
                              IngressHostTLS:
                                title: Input Host for tls
                                type: array
                                items:
                                  type: string

    - title: Define Image and Version Application
      required:
        - ImageName
        - ImageTag
      properties:
        ImageRepository:
          title: Image Repository 
          type: string
          default: asia-southeast2-docker.pkg.dev/rise-utility-343807/rise-apps
          readOnly: true
        ImageName:
          title: Image Name Application
          type: string
        ImageTag:
          title: Image tag version Application
          type: string
    - title: Define HPA for values.yaml
      required:
        - hpaEnabled
      properties:
        hpaEnabled:
          title: Enabled HPA
          default: 'false'
          type: string
          ui:autofocus: true
          enum:
            - 'true'
            - 'false'
      dependencies:
        hpaEnabled:
          'oneOf':
            - properties:
                hpaEnabled:
                  enum:
                    - 'false'
            - properties:
                hpaEnabled:
                  enum:
                    - 'true'
                hpaMinReplicas:
                  title: minimum Replicas
                  type: number
                  default: 2
                hpaMaxReplicas:
                  title: maximum Replicas
                  type: number
                  default: 4
                hpaTargetCPUUtilizationPercentage:
                  title: target CPU Utilization Percentage
                  type: number
                  default: 80
                hpaMetrics:
                  title: Metrics HPA
                  type: array
                  items:
                    type: string
                  uniqueItems: true

    - title: Application repository Information
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        dryRun:
          title: Only perform a dry run, don't publish anything
          type: boolean
          default: true

        owner:
          title: Owner
          type: string
          description: IdP owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

  steps:
    - id: template
      name: Generating component
      action: fetch:template
      input:
        url: ./skeleton
        values:
          appname: ${{ parameters.appname }}
          repochart: ${{ parameters.repochart }}
          chartapp: ${{ parameters.chartapp }}
          revisionchart: ${{ parameters.revisionchart }}
          namespaces: ${{ parameters.namespaces }}
          projectname: ${{ parameters.projectname }}
          env: ${{ parameters.env }}
          hpaEnabled: ${{parameters.hpaEnabled}}
          hpaMinReplicas: ${{parameters.hpaMinReplicas}}
          hpaMaxReplicas: ${{parameters.hpaMaxReplicas}}
          hpaTargetCPUUtilizationPercentage: ${{parameters.hpaTargetCPUUtilizationPercentage}}
          hpaMetrics: ${{parameters.hpaMetrics}}
          resources_requests_cpu: ${{parameters.resources_requests_cpu}}
          resources_requests_memory: ${{parameters.resources_requests_memory}}
          resources_limit_cpu: ${{parameters.resources_limit_cpu}}
          resources_limit_memory: ${{parameters.resources_limit_memory}}
          Environment: ${{parameters.Environment}}
          ApplicationProperties: ${{parameters.ApplicationProperties}}
          ImageRepository: ${{parameters.ImageRepository}}
          ImageName: ${{parameters.ImageName}}
          ImageTag: ${{parameters.ImageTag}}
         
    - id: publish_production
      if: ${{ parameters.dryRun !== true and parameters.env === "production" }}
      name: Publishing to Source Code Repository Production
      action: publish:github
      input:
        description: This is ${{ parameters.appname }}
        repoUrl: ${{ parameters.repoUrl }}
        branch: master
        repoVisibility: private

    # - id: publish_non_production
    #   if: ${{ parameters.dryRun !== true and parameters.env !== "production" }}
    #   name: Publishing to Source Code Repository Non Production
    #   action: publish:github
    #   input:
    #     description: This is ${{ parameters.appname }}
    #     repoUrl: ${{ parameters.repoUrl }}
    #     branch: ${{ parameters.env }}
    #     repoVisibility: private

    - id: register_production
      if: ${{ parameters.dryRun !== true and parameters.env === "production" }}
      name: Registering to the Catalog Production
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish_production.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

    # - id: register_non_production
    #   if: ${{ parameters.dryRun !== true and parameters.env !== "production" }}
    #   name: Registering to the Catalog Non Production 
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish_non_production.output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'

    - name: Results
      if: ${{ parameters.dryRun }}
      action: debug:log
      input:
        listWorkspace: true

  output:
    links:
      - title: Source Code Repository Production
        url: ${{ steps.publish_production.output.remoteUrl }}
      - title: Open Component in catalog Production
        icon: catalog
        entityRef: ${{ steps.register_production.output.entityRef }}
      # - title: Source Code Repository Non Production
      #   url: ${{ steps.publish_non_production.output.remoteUrl }}
      # - title: Open Component in catalog Non Production
      #   icon: catalog
      #   entityRef: ${{ steps.register_non_production.output.entityRef }}